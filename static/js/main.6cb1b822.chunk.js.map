{"version":3,"sources":["components/Header.js","components/Card.js","components/ImagePopup.js","components/PopupWithForm.js","components/Main.js","components/Footer.js","utils/utils.js","utils/api.js","components/App.js","serviceWorker.js","index.js","images/Vector_white.svg"],"names":["Header","className","src","headerPath","alt","Card","card","onCardClick","onDeleteCard","style","backgroundImage","link","onClick","name","type","likes","length","ImagePopup","onClose","closeAllPopups","document","querySelector","classList","remove","PopupWithForm","title","isOpen","children","id","noValidate","disabled","Main","onEditAvatar","onEditProfile","onAddPlace","object","cards","React","useState","isCardDeletePopupOpen","setIsCardDeletePopupOpen","selectedCard","setSelectedCard","setIsOpen","handleCardClick","closeDeleteCardPopup","handleCardDeleteClick","userAvatar","backgroundSize","minWidth","userName","userDescription","map","key","_id","Footer","optionsApi","baseUrl","headers","authorization","api","this","_optionsApi","_baseUrl","_headers","fetch","then","res","ok","json","Promise","reject","status","userData","method","body","JSON","stringify","about","prof","userCardData","newAvatarLink","avatar","App","setOnClose","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","setObject","setCards","useEffect","all","getUserDataDefaultFromServer","getCardDefaultFromServer","cardDefault","catch","err","console","error","placeholder","defaultValue","autoComplete","required","minLength","maxLength","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.6cb1b822.chunk.js","sourcesContent":["import React from 'react';\nimport headerPath from '../images/Vector_white.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={headerPath} alt=\"Логотип\"/>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction Card({card, onCardClick, onDeleteCard}) {\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  return (\n    <div className=\"card\">\n      <img className=\"card__image\" alt=\"\" src=\"\" style={{ backgroundImage: `url(${card.link})`}} onClick={handleClick} />\n      <div className=\"card__info\">\n        <h2 className=\"card__title\">{card.name}</h2>\n        <button type=\"button\" className=\"card__like\" />\n        <p className=\"card__like-counter\">{card.likes.length}</p>\n      </div>\n      <button type=\"button\" className=\"card__trash\" onClick={onDeleteCard} />\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\n\nfunction ImagePopup({card, onClose, closeAllPopups}) {\n\n  if (onClose === true) {\n    document.querySelector('.popup-image').classList.remove('popup-image_opened');\n  }\n\n  return (\n    <div className={`popup-image popup popup__overlay ${card ? 'popup-image_opened' : ''}`}>\n      {card &&  <div className=\"popup-image__container\">\n        <button type=\"button\" className=\"popup-image__close-button popup__close-button\" onClick={closeAllPopups}/>\n        <img className=\"popup-image__image\" src={card.link} alt={card.name} />\n        <h3 className=\"popup-image__title\">{card.name}</h3>\n      </div> }\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","import React from 'react';\n\nfunction PopupWithForm({name, title, isOpen, onClose, closeAllPopups, children}) {\n\n  if (onClose === true) {\n    document.querySelector(`.popup`).classList.remove('popup_opened');\n  }\n\n  return (\n    <div className={`popup popup_type_${name} popup__overlay ${isOpen ? 'popup_opened' : ''}`}>\n      <form id=\"form-popup\" className=\"popup__container popup__form\" noValidate name={name}>\n        <h2 className=\"popup__form-title\">{title}</h2>\n        <fieldset className=\"popup__form-profile popup__fieldset\">\n          {children}\n          {isOpen && (name === \"card-delete\") ? (\n            <button type=\"submit\" className=\"popup-card-delete__form-submit popup__button\">Да</button>\n          ) : (\n            <button disabled type=\"submit\" className=\"popup__form-submit popup__button popup__button_disabled\">Сохранить</button>\n          )}\n        </fieldset>\n        <button onClick={closeAllPopups} type=\"button\" className=\"popup__form-close-button popup__close-button\" />\n      </form>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\nimport Card from './Card';\nimport ImagePopup from './ImagePopup';\nimport PopupWithForm from './PopupWithForm';\n\nfunction Main({onEditAvatar, onEditProfile, onAddPlace, object, cards, onClose, closeAllPopups}) {\n\n  const [isCardDeletePopupOpen, setIsCardDeletePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n    setIsOpen(!isOpen);\n  }\n  const closeDeleteCardPopup = () => {\n    setIsOpen(false);\n    setSelectedCard();\n    setIsCardDeletePopupOpen(false);\n  }\n  const handleCardDeleteClick = () => {\n    setIsCardDeletePopupOpen(!isCardDeletePopupOpen);\n  }\n\n  return (\n    <>\n      <main className=\"content\">\n        <section className=\"profile\">\n          <button onClick={onEditAvatar} type=\"button\" className=\"profile__avatar-button\" style={{ backgroundImage: `url(${object.userAvatar}`, backgroundSize: `contain`, minWidth: '120px'}} />\n          <div className=\"profile__data\">\n            <div className=\"profile__info\">\n              <h1 className=\"profile__title-name\">{object.userName}</h1>\n              <p className=\"profile__subtitle-about\">{object.userDescription}</p>\n            </div>\n            <button onClick={onEditProfile} type=\"button\" className=\"profile__edit-button\" />\n          </div>\n          <button onClick={onAddPlace} type=\"button\" className=\"profile__add-button\" />\n        </section>\n\n        <section className=\"card-container\">\n          {cards.map((card) => (\n            <div key={card._id}>\n              <Card card={card} onCardClick={handleCardClick} onDeleteCard={handleCardDeleteClick} />\n            </div>\n          ))}\n        </section>\n\n      </main>\n      <PopupWithForm name=\"card-delete\" title=\"Вы уверены?\" isOpen={isCardDeletePopupOpen} onClose={onClose} closeAllPopups={closeAllPopups && closeDeleteCardPopup} />\n      <ImagePopup card={selectedCard} onClose={onClose} closeAllPopups={closeAllPopups && closeDeleteCardPopup}/>\n    </>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__info\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","export const optionObject = {\n  formSelector: '.popup__form', // Класс формы\n  inputSelector: '.popup__input', // Класс инпута\n  submitButtonSelector: '.popup__button', // Класс кнопки\n  inactiveButtonClass: 'popup__button_disabled', // Класс отключающий кнопку\n  inputErrorClass: 'popup__input_type_error', // Класс отрабатывающий ошибку\n  errorClass: 'popup__error_visible' // Класс показывающий ошибку\n};\n\nconst optionsApi = {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-13',\n  headers: {\n    authorization: 'b301150e-99e5-48e9-bfa2-35f39eea584a',\n    'Content-Type': 'application/json'\n  }\n};\nexport default optionsApi;\n","import optionsApi from './utils';\n\nclass Api {\n  constructor(optionsApi) {\n    this._optionsApi = optionsApi;\n    this._baseUrl = this._optionsApi.baseUrl;\n    this._headers = this._optionsApi.headers\n  }\n\n  getUserDataDefaultFromServer() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n      }\n    )\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  getCardDefaultFromServer() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n      }\n    )\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  setNewDataUser(userData) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userData.name,\n        about: userData.prof\n      })\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  addNewCardToServer(userCardData) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userCardData.name,\n        link: userCardData.link\n      })\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  deleteCardFromServer(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  likePlus(id) {\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this._headers\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  likeMinus(id) {\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  avatarUpdate(newAvatarLink) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: newAvatarLink\n      })\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n}\nconst api = new Api(optionsApi);\nexport default api;\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport api from '../utils/api';\n\nfunction App() {\n\n  const [onClose, setOnClose] = React.useState(false)\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  };\n\n  const closeAllPopups = () => {\n    setOnClose(!onClose);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n  };\n\n// Получение данных пользователя и массива карточек с сервера\n  const [object, setObject] = React.useState({ userName: '', userDescription: '', userAvatar: ' '});\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    Promise.all([\n      api.getUserDataDefaultFromServer(),\n      api.getCardDefaultFromServer()\n    ])\n    // .then(([userData, cardDefault]) => {\n    //   return [userData, cardDefault];\n    // })\n    .then(([userData, cardDefault]) => {\n      setObject({\n        ...object,\n        userName: userData.name,\n        userDescription: userData.about,\n        userAvatar: userData.avatar,\n      });\n      setCards(cardDefault);\n    })\n    .catch((err) => {\n      console.error(err);\n    })\n    return () => {\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"page\">\n        <Header />\n\n        <Main onEditAvatar={handleEditAvatarClick} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} object={object} cards={cards} onClose={onClose} closeAllPopups={closeAllPopups}/>\n\n        <Footer />\n\n        <PopupWithForm name=\"avatar-update\" title=\"Обновить аватар\" isOpen={isEditAvatarPopupOpen} onClose={onClose} closeAllPopups={closeAllPopups}>\n          <input id=\"link-input_update-avatar\" type=\"url\" className=\"popup-avatar-update__form-image-link popup__input\" name=\"link\" placeholder=\"Ссылка на картинку\" defaultValue=\"\" autoComplete=\"off\" required/>\n          <span id=\"link-input_update-avatar-error\" className=\"popup__error\" />\n        </PopupWithForm>\n\n        <PopupWithForm name=\"profile\" title=\"Редактировать профиль\"  isOpen={isEditProfilePopupOpen} onClose={onClose} closeAllPopups={closeAllPopups}>\n          <input id=\"name-input-profile\" type=\"text\" className=\"popup__form-name popup__input\" name=\"name\" defaultValue=\"Ваше имя\" minLength=\"2\" maxLength=\"40\" autoComplete=\"off\" required/>\n          <span id=\"name-input-profile-error\" className=\"popup__error\" />\n          <input id=\"prof-input\" type=\"text\" className=\"popup__form-about popup__input\" name=\"prof\" defaultValue=\"О себе\" minLength=\"2\" maxLength=\"200\" autoComplete=\"off\" required/>\n          <span id=\"prof-input-error\" className=\"popup__error\" />\n        </PopupWithForm>\n\n        <PopupWithForm name=\"add-card\" title=\"Новое место\"  isOpen={isAddPlacePopupOpen} onClose={onClose} closeAllPopups={closeAllPopups}>\n          <input id=\"name-input-add-card\" type=\"text\" className=\"popup-add-card__form-name popup__input\" name=\"name\" placeholder=\"Название\" defaultValue=\"\" minLength=\"1\" maxLength=\"30\" autoComplete=\"off\" required/>\n          <span id=\"name-input-add-card-error\" className=\"popup__error\" />\n          <input id=\"link-input\" type=\"url\" className=\"popup-add-card__form-image-link popup__input\" name=\"link\" placeholder=\"Ссылка на картинку\" defaultValue=\"\" autoComplete=\"off\" required/>\n          <span id=\"link-input-error\" className=\"popup__error\" />\n        </PopupWithForm>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Vector_white.c6f11019.svg\";"],"sourceRoot":""}