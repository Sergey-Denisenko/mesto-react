{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/ImagePopup.js","components/Main.js","components/Footer.js","utils/utils.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js","images/Vector_white.svg"],"names":["Header","className","src","headerPath","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDeleteClick","actualUserData","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","style","backgroundImage","link","onClick","name","type","length","ImagePopup","onClose","closeAllPopups","resetSelectedCardInImagePopup","document","querySelector","classList","remove","Main","onEditAvatar","onEditProfile","onAddPlace","cards","onCardDelete","setOnClose","useState","isCardDeletePopupOpen","setIsCardDeletePopupOpen","selectedCard","setSelectedCard","isOpen","setIsOpen","handleCardClick","handleCardDeletePopup","avatar","minWidth","description","map","key","Footer","optionsApi","baseUrl","headers","authorization","api","this","_optionsApi","_baseUrl","_headers","fetch","then","res","ok","json","Promise","reject","status","userData","method","body","JSON","stringify","about","userCardData","id","newAvatarLink","PopupWithForm","title","onSubmit","children","noValidate","EditProfilePopup","onUpdateUser","currentUser","useEffect","setName","setDescription","evt","preventDefault","value","onChange","target","minLength","maxLength","autoComplete","required","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","placeholder","defaultValue","AddPlacePopup","setLink","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","setCards","setCurrentUser","all","getUserDataDefaultFromServer","getCardDefaultFromServer","cardDefault","catch","err","console","error","Provider","likePlus","newCard","newCards","item","likeMinus","deleteCardFromServer","filter","avatarUpdate","setNewDataUser","addNewCardToServer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.16041c43.chunk.js","sourcesContent":["import React from 'react';\nimport headerPath from '../images/Vector_white.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={headerPath} alt=\"Логотип\"/>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nexport const CurrentUserContext = React.createContext();\n","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card({card, onCardClick, onCardLike, onCardDeleteClick}) {\n\n  const actualUserData = React.useContext(CurrentUserContext);\n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  function handleLikeClick() {\n    onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    onCardDeleteClick(card);\n  }\n\n  const isOwn = card.owner._id === actualUserData._id;\n  const cardDeleteButtonClassName = (`card__trash ${!isOwn ? 'card__trash_disabled' : ''}`);\n  const isLiked = card.likes.some(i => i._id === actualUserData._id);\n  const cardLikeButtonClassName = (`card__like ${isLiked ? 'card__like_active-black' : ''}`);\n\n  return (\n    <div className=\"card\">\n      <img className=\"card__image\" alt=\"\" src=\"\" style={{ backgroundImage: `url(${card.link})`}} onClick={handleClick} />\n      <div className=\"card__info\">\n        <h2 className=\"card__title\">{card.name}</h2>\n        <button type=\"button\" className={`card__like ${cardLikeButtonClassName}`} onClick={handleLikeClick}/>\n        <p className=\"card__like-counter\">{card.likes.length}</p>\n      </div>\n      <button type=\"button\" className={`card__trash ${cardDeleteButtonClassName}`} onClick={handleDeleteClick} />\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\n\nfunction ImagePopup({card, onClose, closeAllPopups, resetSelectedCardInImagePopup}) {\n\n  if (onClose === true) {\n    document.querySelector('.popup-image').classList.remove('popup-image_opened');\n  }\n\n  return (\n    <div className={`popup-image popup popup__overlay ${card ? 'popup-image_opened' : ''}`}>\n      {card &&  <div className=\"popup-image__container\">\n        <button type=\"button\" className=\"popup-image__close-button popup__close-button\" onClick={closeAllPopups && resetSelectedCardInImagePopup}/>\n        {/* <button type=\"button\" className=\"popup-image__close-button popup__close-button\" onClick={closeAllPopups}/> */}\n        <img className=\"popup-image__image\" src={card.link} alt={card.name} />\n        <h3 className=\"popup-image__title\">{card.name}</h3>\n      </div> }\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","import React from 'react';\nimport Card from './Card';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n// import PopupWithForm from './PopupWithForm';\n\nfunction Main({onEditAvatar, onEditProfile, onAddPlace, onClose, closeAllPopups, cards, onCardLike, onCardDelete, setOnClose}) {\n\n  const actualUserData = React.useContext(CurrentUserContext); //Подписка на контекст\n\n  const [isCardDeletePopupOpen, setIsCardDeletePopupOpen] = React.useState(false); //Переменная состояния\n  const [selectedCard, setSelectedCard] = React.useState(); //Переменная состояния\n  const [isOpen, setIsOpen] = React.useState(false); //Переменная состояния\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n    setIsOpen(!isOpen);\n    setOnClose(false);\n  }\n  const resetSelectedCardInImagePopup = () => {\n    setSelectedCard();\n  }\n\n  const handleCardDeletePopup = (card) => {\n    setIsCardDeletePopupOpen(!isCardDeletePopupOpen);\n    onCardDelete(card);\n  }\n\n  return (\n    <>\n      <main className=\"content\">\n        <section className=\"profile\">\n          <button onClick={onEditAvatar} type=\"button\" className=\"profile__avatar-button\" style={{ backgroundImage: `url(${actualUserData.avatar}`, minWidth: '120px'}} />\n          <div className=\"profile__data\">\n            <div className=\"profile__info\">\n              <h1 className=\"profile__title-name\">{actualUserData.name}</h1>\n              <p className=\"profile__subtitle-about\">{actualUserData.description}</p>\n            </div>\n            <button onClick={onEditProfile} type=\"button\" className=\"profile__edit-button\" />\n          </div>\n          <button onClick={onAddPlace} type=\"button\" className=\"profile__add-button\" />\n        </section>\n\n        <section className=\"card-container\">\n          {cards.map((card) => (\n            <div key={card._id}>\n              <Card card={card} onCardClick={handleCardClick} onCardLike={onCardLike} onCardDeleteClick={handleCardDeletePopup} />\n            </div>\n          ))}\n        </section>\n      </main>\n      {/* <PopupWithForm name=\"card-delete\" title=\"Вы уверены?\" isOpen={isCardDeletePopupOpen} onClose={onClose} closeAllPopups={closeAllPopups && closeDeleteCardPopup} /> */}\n      <ImagePopup card={selectedCard} onClose={onClose} closeAllPopups={closeAllPopups} resetSelectedCardInImagePopup={resetSelectedCardInImagePopup}/>\n    </>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__info\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","export const optionObject = {\n  formSelector: '.popup__form', // Класс формы\n  inputSelector: '.popup__input', // Класс инпута\n  submitButtonSelector: '.popup__button', // Класс кнопки\n  inactiveButtonClass: 'popup__button_disabled', // Класс отключающий кнопку\n  inputErrorClass: 'popup__input_type_error', // Класс отрабатывающий ошибку\n  errorClass: 'popup__error_visible' // Класс показывающий ошибку\n};\n\nconst optionsApi = {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-13',\n  headers: {\n    authorization: 'b301150e-99e5-48e9-bfa2-35f39eea584a',\n    'Content-Type': 'application/json'\n  }\n};\nexport default optionsApi;\n","import optionsApi from './utils';\n\nclass Api {\n  constructor(optionsApi) {\n    this._optionsApi = optionsApi;\n    this._baseUrl = this._optionsApi.baseUrl;\n    this._headers = this._optionsApi.headers\n  }\n\n  getUserDataDefaultFromServer() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n      }\n    )\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  getCardDefaultFromServer() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n      }\n    )\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  setNewDataUser(userData) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userData.name,\n        about: userData.description\n      })\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  addNewCardToServer(userCardData) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userCardData.name,\n        link: userCardData.link\n      })\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  deleteCardFromServer(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  likePlus(id) {\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this._headers\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  likeMinus(id) {\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  avatarUpdate(newAvatarLink) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: newAvatarLink.avatar\n      })\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n}\nconst api = new Api(optionsApi);\nexport default api;\n","import React from 'react';\n\nfunction PopupWithForm({name, title, isOpen, onClose, onSubmit, children}) {\n\n  if (onClose === true) {\n    document.querySelector(`.popup`).classList.remove('popup_opened');\n  }\n\n  return (\n    <div className={`popup popup_type_${name} popup__overlay ${isOpen ? 'popup_opened' : ''}`}>\n      <form id=\"form-popup\" className=\"popup__container popup__form\" noValidate name={name} onSubmit={onSubmit}>\n        <h2 className=\"popup__form-title\">{title}</h2>\n        <fieldset className=\"popup__form-profile popup__fieldset\">\n          {children}\n          {isOpen && (name === \"card-delete\") ? (\n            <button type=\"submit\" className=\"popup-card-delete__form-submit popup__button\">Да</button>\n          ) : (\n            <button type=\"submit\" className=\"popup__form-submit popup__button popup__button_disabled\">Сохранить</button>\n            // <button disabled type=\"submit\" className=\"popup__form-submit popup__button popup__button_disabled\">Сохранить</button>\n          )}\n        </fieldset>\n        <button onClick={onClose} type=\"button\" className=\"popup__form-close-button popup__close-button\" />\n      </form>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext} from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser}) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.description);\n  }, [currentUser]);\n\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  function handleChangeName(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleChangeDescription(evt) {\n    setDescription(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateUser({\n      name,\n      description,\n    });\n  }\n\n  return(\n    <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit}>\n      <input id=\"name-input-profile\" type=\"text\" value={name} onChange={handleChangeName} className=\"popup__form-name popup__input\" name=\"name\" minLength=\"2\" maxLength=\"40\" autoComplete=\"off\" required />\n      <span id=\"name-input-profile-error\" className=\"popup__error\" />\n      <input id=\"prof-input\" type=\"text\" value={description} onChange={handleChangeDescription} className=\"popup__form-about popup__input\" name=\"prof\" minLength=\"2\" maxLength=\"200\" autoComplete=\"off\" required />\n      <span id=\"prof-input-error\" className=\"popup__error\" />\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar}) {\n\n  const avatarRef = React.useRef('');\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n\n    onUpdateAvatar({\n      avatar: avatarRef.current.value,// Значение инпута, полученное с помощью рефа\n    });\n  }\n\n  return(\n    <PopupWithForm name=\"avatar-update\" title=\"Обновить аватар\" isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit}>\n      <input ref={avatarRef} id=\"link-input_update-avatar\" type=\"url\" className=\"popup-avatar-update__form-image-link popup__input\" name=\"link\" placeholder=\"Ссылка на картинку\" defaultValue=\"\" autoComplete=\"off\" required/>\n      <span id=\"link-input_update-avatar-error\" className=\"popup__error\" />\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup({isOpen, onClose, onAddPlace}) {\n  const [name, setName] = React.useState('');\n  const [link, setLink] = React.useState('');\n\n  function handleChangeName(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleChangeLink(evt) {\n    setLink(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onAddPlace(\n      {\n        name,\n        link,\n      }\n    );\n  };\n\n  return(\n    <PopupWithForm name=\"add-card\" title=\"Новое место\"  isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit}>\n      <input id=\"name-input-add-card\" type=\"text\" value={name} onChange={handleChangeName} className=\"popup-add-card__form-name popup__input\" name=\"name\" placeholder=\"Название\" minLength=\"1\" maxLength=\"30\" autoComplete=\"off\" required/>\n      <span id=\"name-input-add-card-error\" className=\"popup__error\" />\n      <input id=\"link-input\" type=\"url\" value={link} onChange={handleChangeLink} className=\"popup-add-card__form-image-link popup__input\" name=\"link\" placeholder=\"Ссылка на картинку\" autoComplete=\"off\" required/>\n      <span id=\"link-input-error\" className=\"popup__error\" />\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n// import PopupWithForm from './PopupWithForm';\nimport api from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\n\nfunction App() {\n\n  const [onClose, setOnClose] = React.useState(false)\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  };\n\n  const closeAllPopups = () => {\n    setOnClose(!onClose);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n  };\n\n  function handleUpdateUser(userData) {\n    api.setNewDataUser(userData)\n    .then((userData) => {\n      setCurrentUser({\n        ...currentUser,\n        name: userData.name,\n        description: userData.about,\n      });\n      closeAllPopups();\n    })\n    .catch((err) => {\n      console.error(err);\n    })\n    return () => {\n    };\n  }\n\n  function handleUpdateAvatar(newAvatarLink) {\n    api.avatarUpdate(newAvatarLink)\n    .then((userData) => {\n      setCurrentUser({\n        ...currentUser,\n        avatar: userData.avatar,\n      });\n      closeAllPopups();\n    })\n    .catch((err) => {\n      console.error(err);\n    })\n    return () => {\n    };\n  }\n\n// Получение данных пользователя и массива карточек с сервера\n  const [cards, setCards] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState({ name: '', description: '', avatar: ' ', _id: '' });\n\n  React.useEffect(() => {\n    Promise.all([\n      api.getUserDataDefaultFromServer(),\n      api.getCardDefaultFromServer()\n    ])\n    .then(([userData, cardDefault]) => {\n      setCards(cardDefault);\n      setCurrentUser({\n        ...currentUser,\n        name: userData.name,\n        description: userData.about,\n        avatar: userData.avatar,\n        _id: userData._id,\n      });\n    })\n    .catch((err) => {\n      console.error(err);\n    })\n    return () => {\n    };\n  }, []);\n\n\n  function handleAddPlaceSubmit(userCardData) {\n    api.addNewCardToServer(userCardData)\n    .then((newCard) => {\n      setCards(\n        [...cards, newCard]\n      );\n      closeAllPopups();\n    })\n    .catch((err) => {\n      console.error(err);\n    })\n    return () => {\n    }\n  }\n\n//Функция проставления лайка\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    if (!isLiked) {\n      api.likePlus(card._id)\n      .then((newCard) => {\n        const newCards = cards.map((item) => item._id === card._id ? newCard : item);\n        setCards(newCards);\n      });\n    }\n    if (isLiked) {\n      api.likeMinus(card._id)\n      .then((newCard) => {\n        const newCards = cards.map((item) => item._id === card._id ? newCard : item);\n        setCards(newCards);\n      });\n    }\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCardFromServer(card._id)\n    .then(() => {\n      const newCards = cards.filter((item) => item._id !== card._id ? true : false);\n      setCards(newCards);\n      closeAllPopups();\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <div className=\"page\">\n          <Header />\n\n          <Main onEditAvatar={handleEditAvatarClick} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onClose={onClose} closeAllPopups={closeAllPopups}\n          cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete} setOnClose={setOnClose}/>\n\n          <Footer />\n\n          <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar}/>\n\n          <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n\n          <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n        </div>\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Vector_white.c6f11019.svg\";"],"sourceRoot":""}